// Code generated by MockGen. DO NOT EDIT.
// Source: urlshortener/internal/deps (interfaces: URLshortener)
//
// Generated by this command:
//
//	mockgen -destination=mocks/url_shortener_mock.go -package=mocks urlshortener/internal/deps URLshortener
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockURLshortener is a mock of URLshortener interface.
type MockURLshortener struct {
	ctrl     *gomock.Controller
	recorder *MockURLshortenerMockRecorder
	isgomock struct{}
}

// MockURLshortenerMockRecorder is the mock recorder for MockURLshortener.
type MockURLshortenerMockRecorder struct {
	mock *MockURLshortener
}

// NewMockURLshortener creates a new mock instance.
func NewMockURLshortener(ctrl *gomock.Controller) *MockURLshortener {
	mock := &MockURLshortener{ctrl: ctrl}
	mock.recorder = &MockURLshortenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLshortener) EXPECT() *MockURLshortenerMockRecorder {
	return m.recorder
}

// GetURL mocks base method.
func (m *MockURLshortener) GetURL(token string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURL", token)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURL indicates an expected call of GetURL.
func (mr *MockURLshortenerMockRecorder) GetURL(token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*MockURLshortener)(nil).GetURL), token)
}

// SetURL mocks base method.
func (m *MockURLshortener) SetURL(url string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetURL", url)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetURL indicates an expected call of SetURL.
func (mr *MockURLshortenerMockRecorder) SetURL(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetURL", reflect.TypeOf((*MockURLshortener)(nil).SetURL), url)
}
