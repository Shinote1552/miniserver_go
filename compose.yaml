version: '3.8'

services:
  # Основной сервис с автоматическим переключением
  urlshortener-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: urlshortener-service
    ports:
      - "8080:8080"
    environment:
      - SERVER_ADDRESS=:8080
      - BASE_URL=http://localhost:8080
      - DATABASE_DSN=postgres://postgres:admin@urlshortener-db:5432/gpx_test?sslmode=disable
      - JWT_SECRET_KEY=YuHiAYxgw4WDdhxduFavo1/202YPUSwbn9AbO0R4dhs=
      - JWT_ACCESS_EXPIRE=15m
      - FILE_STORAGE_PATH=/data/short-url-db.json
    depends_on:
      urlshortener-db:
        condition: service_healthy
    networks:
      - urlshortener-network
    restart: unless-stopped
    volumes:
      - app_data:/data

  # Сервис с принудительным inmemory (имитация ошибки Postgres)
  urlshortener-inmemory:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: urlshortener-inmemory
    ports:
      - "8081:8080"
    environment:
      - SERVER_ADDRESS=:8080
      - BASE_URL=http://localhost:8081
      - DATABASE_DSN=  # Пустая DSN для принудительного inmemory
      - JWT_SECRET_KEY=YuHiAYxgw4WDdhxduFavo1/202YPUSwbn9AbO0R4dhs=
      - JWT_ACCESS_EXPIRE=15m
      - FILE_STORAGE_PATH=/data/short-url-db.json
    networks:
      - urlshortener-network
    restart: unless-stopped
    profiles: ["inmemory"]

  # Сервис с неработающей Postgres (для теста fallback)
  urlshortener-fallback:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: urlshortener-fallback
    ports:
      - "8082:8080"
    environment:
      - SERVER_ADDRESS=:8080
      - BASE_URL=http://localhost:8082
      - DATABASE_DSN=postgres://invalid:password@non-existent-host:5432/nonexistent?sslmode=disable
      - JWT_SECRET_KEY=YuHiAYxgw4WDdhxduFavo1/202YPUSwbn9AbO0R4dhs=
      - JWT_ACCESS_EXPIRE=15m
      - FILE_STORAGE_PATH=/data/short-url-db.json
    networks:
      - urlshortener-network
    restart: unless-stopped
    profiles: ["fallback"]

  urlshortener-db:
    image: postgres:15.5-bookworm
    container_name: urlshortener-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: gpx_test
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d gpx_test"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - urlshortener-network
    restart: unless-stopped

volumes:
  postgres_data:
  app_data:

networks:
  urlshortener-network:
    driver: bridge